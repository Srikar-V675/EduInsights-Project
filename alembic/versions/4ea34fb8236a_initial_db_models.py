"""Initial db models

Revision ID: 4ea34fb8236a
Revises:
Create Date: 2024-05-08 00:36:08.182604

"""

from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "4ea34fb8236a"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "batches",
        sa.Column("batch_id", sa.Integer(), nullable=False),
        sa.Column("batch_name", sa.String(length=50), nullable=False),
        sa.Column("batch_year", sa.String(length=9), nullable=False),
        sa.Column("scheme", sa.Integer(), nullable=False),
        sa.Column("num_students", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("batch_id"),
    )
    op.create_index(
        op.f("ix_batches_batch_id"), "batches", ["batch_id"], unique=False
    )
    op.create_index(
        op.f("ix_batches_batch_name"), "batches", ["batch_name"], unique=True
    )
    op.create_index(
        op.f("ix_batches_batch_year"), "batches", ["batch_year"], unique=False
    )
    op.create_index(
        op.f("ix_batches_scheme"), "batches", ["scheme"], unique=False
    )
    op.create_table(
        "users",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("email", sa.String(length=50), nullable=False),
        sa.Column("password", sa.Text(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("user_id"),
    )
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    op.create_index(
        op.f("ix_users_user_id"), "users", ["user_id"], unique=False
    )
    op.create_table(
        "semesters",
        sa.Column("sem_id", sa.Integer(), nullable=False),
        sa.Column("batch_id", sa.Integer(), nullable=False),
        sa.Column("sem_num", sa.Integer(), nullable=False),
        sa.Column("num_subjects", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.CheckConstraint(
            "sem_num >= 1 AND sem_num <= 8", name="check_semester_range"
        ),
        sa.ForeignKeyConstraint(
            ["batch_id"],
            ["batches.batch_id"],
        ),
        sa.PrimaryKeyConstraint("sem_id"),
    )
    op.create_index(
        op.f("ix_semesters_num_subjects"),
        "semesters",
        ["num_subjects"],
        unique=False,
    )
    op.create_index(
        op.f("ix_semesters_sem_id"), "semesters", ["sem_id"], unique=False
    )
    op.create_index(
        op.f("ix_semesters_sem_num"), "semesters", ["sem_num"], unique=False
    )
    op.create_table(
        "sections",
        sa.Column("section_id", sa.Integer(), nullable=False),
        sa.Column("batch_id", sa.Integer(), nullable=False),
        sa.Column("sem_id", sa.Integer(), nullable=False),
        sa.Column("section", sa.String(length=2), nullable=False),
        sa.Column("num_students", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["batch_id"],
            ["batches.batch_id"],
        ),
        sa.ForeignKeyConstraint(
            ["sem_id"],
            ["semesters.sem_id"],
        ),
        sa.PrimaryKeyConstraint("section_id"),
    )
    op.create_index(
        op.f("ix_sections_section"), "sections", ["section"], unique=False
    )
    op.create_index(
        op.f("ix_sections_section_id"),
        "sections",
        ["section_id"],
        unique=False,
    )
    op.create_table(
        "subjects",
        sa.Column("subject_id", sa.Integer(), nullable=False),
        sa.Column("sub_code", sa.String(length=10), nullable=False),
        sa.Column("sem_id", sa.Integer(), nullable=False),
        sa.Column("batch_id", sa.Integer(), nullable=False),
        sa.Column("sub_name", sa.String(length=70), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["batch_id"],
            ["batches.batch_id"],
        ),
        sa.ForeignKeyConstraint(
            ["sem_id"],
            ["semesters.sem_id"],
        ),
        sa.PrimaryKeyConstraint("subject_id"),
    )
    op.create_index(
        op.f("ix_subjects_sub_code"), "subjects", ["sub_code"], unique=False
    )
    op.create_index(
        op.f("ix_subjects_sub_name"), "subjects", ["sub_name"], unique=False
    )
    op.create_index(
        op.f("ix_subjects_subject_id"),
        "subjects",
        ["subject_id"],
        unique=False,
    )
    op.create_table(
        "students",
        sa.Column("stud_id", sa.Integer(), nullable=False),
        sa.Column("batch_id", sa.Integer(), nullable=False),
        sa.Column("usn", sa.String(length=10), nullable=False),
        sa.Column("section_id", sa.Integer(), nullable=False),
        sa.Column("stud_name", sa.String(length=100), nullable=False),
        sa.Column("cgpa", sa.Numeric(precision=2, scale=2), nullable=False),
        sa.Column("active", sa.Boolean(), nullable=False),
        sa.Column("current_sem", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.CheckConstraint(
            "current_sem >= 1 AND current_sem <= 8",
            name="check_semester_range",
        ),
        sa.ForeignKeyConstraint(
            ["batch_id"],
            ["batches.batch_id"],
        ),
        sa.ForeignKeyConstraint(
            ["section_id"],
            ["sections.section_id"],
        ),
        sa.PrimaryKeyConstraint("stud_id"),
    )
    op.create_index(
        op.f("ix_students_active"), "students", ["active"], unique=False
    )
    op.create_index(
        op.f("ix_students_current_sem"),
        "students",
        ["current_sem"],
        unique=False,
    )
    op.create_index(
        op.f("ix_students_stud_id"), "students", ["stud_id"], unique=False
    )
    op.create_index(
        op.f("ix_students_stud_name"), "students", ["stud_name"], unique=False
    )
    op.create_index(op.f("ix_students_usn"), "students", ["usn"], unique=True)
    op.create_table(
        "marks",
        sa.Column("marks_id", sa.Integer(), nullable=False),
        sa.Column("stud_id", sa.Integer(), nullable=False),
        sa.Column("subject_id", sa.Integer(), nullable=False),
        sa.Column("section_id", sa.Integer(), nullable=False),
        sa.Column("sem_id", sa.Integer(), nullable=False),
        sa.Column("batch_id", sa.Integer(), nullable=False),
        sa.Column("internal", sa.Integer(), nullable=False),
        sa.Column("external", sa.Integer(), nullable=False),
        sa.Column("total", sa.Integer(), nullable=False),
        sa.Column(
            "result", sa.Enum("F", "P", "W", name="results"), nullable=False
        ),
        sa.Column(
            "grade",
            sa.Enum("FCD", "FC", "SC", "FAIL", "ABSENT", name="grades"),
            nullable=False,
        ),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.CheckConstraint("external <= 50", name="check_external"),
        sa.CheckConstraint("internal <= 50", name="check_internal"),
        sa.CheckConstraint("total <= 100", name="check_total"),
        sa.ForeignKeyConstraint(
            ["batch_id"],
            ["batches.batch_id"],
        ),
        sa.ForeignKeyConstraint(
            ["section_id"],
            ["sections.section_id"],
        ),
        sa.ForeignKeyConstraint(
            ["sem_id"],
            ["semesters.sem_id"],
        ),
        sa.ForeignKeyConstraint(
            ["stud_id"],
            ["students.stud_id"],
        ),
        sa.ForeignKeyConstraint(
            ["subject_id"],
            ["subjects.subject_id"],
        ),
        sa.PrimaryKeyConstraint("marks_id"),
    )
    op.create_index(
        op.f("ix_marks_external"), "marks", ["external"], unique=False
    )
    op.create_index(
        op.f("ix_marks_internal"), "marks", ["internal"], unique=False
    )
    op.create_index(
        op.f("ix_marks_marks_id"), "marks", ["marks_id"], unique=False
    )
    op.create_index(op.f("ix_marks_total"), "marks", ["total"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_marks_total"), table_name="marks")
    op.drop_index(op.f("ix_marks_marks_id"), table_name="marks")
    op.drop_index(op.f("ix_marks_internal"), table_name="marks")
    op.drop_index(op.f("ix_marks_external"), table_name="marks")
    op.drop_table("marks")
    op.drop_index(op.f("ix_students_usn"), table_name="students")
    op.drop_index(op.f("ix_students_stud_name"), table_name="students")
    op.drop_index(op.f("ix_students_stud_id"), table_name="students")
    op.drop_index(op.f("ix_students_current_sem"), table_name="students")
    op.drop_index(op.f("ix_students_active"), table_name="students")
    op.drop_table("students")
    op.drop_index(op.f("ix_subjects_subject_id"), table_name="subjects")
    op.drop_index(op.f("ix_subjects_sub_name"), table_name="subjects")
    op.drop_index(op.f("ix_subjects_sub_code"), table_name="subjects")
    op.drop_table("subjects")
    op.drop_index(op.f("ix_sections_section_id"), table_name="sections")
    op.drop_index(op.f("ix_sections_section"), table_name="sections")
    op.drop_table("sections")
    op.drop_index(op.f("ix_semesters_sem_num"), table_name="semesters")
    op.drop_index(op.f("ix_semesters_sem_id"), table_name="semesters")
    op.drop_index(op.f("ix_semesters_num_subjects"), table_name="semesters")
    op.drop_table("semesters")
    op.drop_index(op.f("ix_users_user_id"), table_name="users")
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.drop_table("users")
    op.drop_index(op.f("ix_batches_scheme"), table_name="batches")
    op.drop_index(op.f("ix_batches_batch_year"), table_name="batches")
    op.drop_index(op.f("ix_batches_batch_name"), table_name="batches")
    op.drop_index(op.f("ix_batches_batch_id"), table_name="batches")
    op.drop_table("batches")
    # ### end Alembic commands ###
